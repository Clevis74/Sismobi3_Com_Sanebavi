#!/bin/bash

# üîç Script de Valida√ß√£o de Schema Supabase
# Verifica a consist√™ncia entre SQL, TypeScript e Supabase types

echo "üîç INICIANDO VALIDA√á√ÉO DE SCHEMA SUPABASE"
echo "========================================"
echo ""

# Fun√ß√£o para verificar se um arquivo existe
check_file() {
    if [ -f "$1" ]; then
        echo "‚úÖ $1 encontrado"
        return 0
    else
        echo "‚ùå $1 N√ÉO encontrado"
        return 1
    fi
}

# Fun√ß√£o para contar linhas que cont√™m um padr√£o
count_pattern() {
    if [ -f "$1" ]; then
        count=$(grep -c "$2" "$1" 2>/dev/null || echo "0")
        echo "$count"
    else
        echo "0"
    fi
}

echo "üìÇ VERIFICANDO ARQUIVOS PRINCIPAIS"
echo "================================="

# Verificar arquivos cr√≠ticos
check_file "/app/supabase-schema.sql"
check_file "/app/src/types/index.ts"
check_file "/app/src/lib/supabaseClient.ts"
check_file "/app/src/services/supabaseService.ts"

echo ""
echo "üóÉÔ∏è AN√ÅLISE DE TABELAS"
echo "==================="

# Lista de tabelas esperadas
tables=("properties" "tenants" "transactions" "documents" "energy_bills" "water_bills" "informors")

for table in "${tables[@]}"; do
    echo ""
    echo "üìã Tabela: $table"
    echo "  SQL Schema: $(count_pattern '/app/supabase-schema.sql' "CREATE TABLE.*$table")"
    echo "  Supabase Types: $(count_pattern '/app/src/lib/supabaseClient.ts' "$table:")"
    echo "  Service Layer: $(count_pattern '/app/src/services/supabaseService.ts' "${table}Service")"
    echo "  Mappers: $(count_pattern '/app/src/services/supabaseService.ts' "${table}FromSupabase")"
done

echo ""
echo "üîó VERIFICANDO RELACIONAMENTOS"
echo "=============================="

# Verificar foreign keys
fk_count=$(count_pattern '/app/supabase-schema.sql' 'REFERENCES')
echo "Foreign Keys no SQL: $fk_count"

# Verificar joins nos services
join_count=$(count_pattern '/app/src/services/supabaseService.ts' 'tenants (' )
echo "Joins implementados: $join_count"

echo ""
echo "üìä ESTAT√çSTICAS GERAIS"
echo "====================="

# Contar interfaces TypeScript
interfaces=$(count_pattern '/app/src/types/index.ts' 'export interface')
echo "Interfaces TypeScript: $interfaces"

# Contar mappers
mappers=$(count_pattern '/app/src/services/supabaseService.ts' 'FromSupabase')
echo "Mapper Functions: $mappers"

# Contar hooks customizados
hooks=$(find /app/src/hooks -name "use*.ts" | wc -l)
echo "Custom Hooks: $hooks"

echo ""
echo "üéØ VALIDA√á√ÉO DE CONSIST√äNCIA"
echo "============================"

# Verificar se todos os tipos est√£o definidos no supabaseClient
missing_types=()

for table in "${tables[@]}"; do
    if ! grep -q "${table}:" /app/src/lib/supabaseClient.ts; then
        missing_types+=("$table")
    fi
done

if [ ${#missing_types[@]} -eq 0 ]; then
    echo "‚úÖ Todos os tipos Supabase est√£o definidos"
else
    echo "‚ö†Ô∏è  Tipos faltando: ${missing_types[*]}"
fi

# Verificar mappers
missing_mappers=()
for table in "${tables[@]}"; do
    if ! grep -q "${table}FromSupabase" /app/src/services/supabaseService.ts; then
        missing_mappers+=("$table")
    fi
done

if [ ${#missing_mappers[@]} -eq 0 ]; then
    echo "‚úÖ Todos os mappers est√£o implementados"
else
    echo "‚ö†Ô∏è  Mappers faltando: ${missing_mappers[*]}"
fi

echo ""
echo "üöÄ TESTE DE SINTAXE TYPESCRIPT"
echo "=============================="

# Verificar se n√£o h√° erros de sintaxe TypeScript (simplificado)
if command -v tsc >/dev/null 2>&1; then
    cd /app
    echo "Executando verifica√ß√£o TypeScript..."
    if tsc --noEmit --skipLibCheck; then
        echo "‚úÖ Sintaxe TypeScript v√°lida"
    else
        echo "‚ö†Ô∏è  Poss√≠veis erros de sintaxe TypeScript detectados"
    fi
else
    echo "‚ö†Ô∏è  TypeScript compiler n√£o encontrado, pulando verifica√ß√£o"
fi

echo ""
echo "üìã RELAT√ìRIO FINAL"
echo "================="

# Resumo final
total_tables=${#tables[@]}
defined_types=$(grep -c ":" /app/src/lib/supabaseClient.ts | head -1)
total_mappers=$(count_pattern '/app/src/services/supabaseService.ts' 'FromSupabase')

echo "üìä Estat√≠sticas Finais:"
echo "  ‚Ä¢ Tabelas esperadas: $total_tables"
echo "  ‚Ä¢ Mappers implementados: $total_mappers"
echo "  ‚Ä¢ Hooks customizados: $hooks"
echo "  ‚Ä¢ Interfaces TypeScript: $interfaces"

echo ""
if [ ${#missing_types[@]} -eq 0 ] && [ ${#missing_mappers[@]} -eq 0 ]; then
    echo "üéâ VALIDA√á√ÉO COMPLETA: SCHEMA 100% SINCRONIZADO!"
    echo "   Todas as tabelas possuem tipos, mappers e services implementados."
else
    echo "‚ö†Ô∏è  VALIDA√á√ÉO PARCIAL: Algumas inconsist√™ncias detectadas."
    echo "   Verifique o relat√≥rio detalhado acima."
fi

echo ""
echo "üìñ Para mais detalhes, consulte: /app/SCHEMA_SYNCHRONIZATION_REPORT.md"
echo "========================================"